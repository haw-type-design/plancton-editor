'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _uuid = require('uuid');

var _uuid2 = _interopRequireDefault(_uuid);

var _buffer2 = require('buffer');

var UUID = (function () {
  function UUID(value) {
    _classCallCheck(this, UUID);

    if (!value) {
      var _buffer = new _buffer2.Buffer(16);
      _uuid2['default'].v4(null, _buffer, 0);
      value = _buffer.toString('base64');
    }
    this._value = value;
  }

  _createClass(UUID, [{
    key: 'toXml',
    value: function toXml() {
      return this._value;
    }
  }, {
    key: 'value',
    get: function get() {
      return this._value;
    }
  }]);

  return UUID;
})();

var buffer = new _buffer2.Buffer(16);
buffer.fill(0);

UUID.ZERO = new UUID(buffer.toString('base64'));

UUID.fromXml = function (str) {
  return new UUID(str);
};

exports['default'] = UUID;
module.exports = exports['default'];