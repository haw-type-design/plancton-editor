'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _util = require('./util');

var Attribute = (function () {
  function Attribute(db, key, value) {
    var _protected = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];

    _classCallCheck(this, Attribute);

    this._db = db;

    this._key = key || '';
    this._value = value || '';
    this._protected = !!_protected;
  }

  _createClass(Attribute, [{
    key: 'toXml',
    value: function toXml() {
      var res = {
        Key: this._key,
        Value: this._value
      };
      if (this._protected) {
        res.Value = {
          _: this._value,
          $: {
            Protected: (0, _util.boolXml)(true)
          }
        };
      }
      return res;
    }
  }, {
    key: 'key',
    get: function get() {
      return this._key;
    }
  }, {
    key: 'value',
    get: function get() {
      return this._protected ? this._db.unpack(this._value) : this._value;
    },
    set: function set(v) {
      this._value = this._protected ? this._db.pack(v) : v;
    }
  }]);

  return Attribute;
})();

Attribute.fromXml = function (xmlJson, db) {
  var a = new Attribute(db);
  a._key = xmlJson.Key;

  if (xmlJson.Value.$) {
    a._value = xmlJson.Value._ || '';
    a._protected = true;
  } else {
    a._value = xmlJson.Value;
    a._protected = false;
  }
  return a;
};

exports['default'] = Attribute;
module.exports = exports['default'];