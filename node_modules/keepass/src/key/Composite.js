'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

var _utilityErrors = require('../utility/errors');

var _utilityErrors2 = _interopRequireDefault(_utilityErrors);

var _Base = require('./Base');

var _Base2 = _interopRequireDefault(_Base);

var Composite = (function (_BaseKey) {
  _inherits(Composite, _BaseKey);

  function Composite(keys) {
    _classCallCheck(this, Composite);

    _get(Object.getPrototypeOf(Composite.prototype), 'constructor', this).call(this);
    this.reset();
    (keys || []).forEach(this.add, this);
  }

  _createClass(Composite, [{
    key: 'add',
    value: function add(key) {
      _utilityErrors2['default'].instanceOf(key, _Base2['default'], 'key');
      this._keys.push(key);
    }
  }, {
    key: 'hash',
    value: function hash() {
      // Check if there are any credentials
      if (!this._keys.length) {
        throw new Error('Can not build composite hash when no keys were given');
      }

      this._keys = this._keys.sort(function (a, b) {
        return a.priority() - b.priority();
      });

      // Merge all credentials together and hash them with SHA256
      var compositeHash = _crypto2['default'].createHash('sha256');
      this._keys.forEach(function (c) {
        compositeHash.update(c.hash());
      });
      return compositeHash.digest();
    }
  }, {
    key: 'reset',
    value: function reset() {
      this._keys = [];
    }
  }, {
    key: 'generateKey',
    value: function generateKey(masterSeed, transformSeed, transformRounds) {
      var hash = this.hash();
      while (transformRounds--) {
        var cipher = _crypto2['default'].createCipheriv('aes-256-ecb', transformSeed, new Buffer(0));
        cipher.setAutoPadding(false);
        hash = Buffer.concat([cipher.update(hash), cipher.final()]);
      }

      var transformedHash = _crypto2['default'].createHash('sha256').update(hash).digest();

      return _crypto2['default'].createHash('sha256').update(Buffer.concat([masterSeed, transformedHash])).digest();
    }
  }]);

  return Composite;
})(_Base2['default']);

exports['default'] = Composite;
module.exports = exports['default'];